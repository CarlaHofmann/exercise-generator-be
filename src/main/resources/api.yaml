openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /sheet/{id}:
    get:
      tags:
      - sheet-controller
      operationId: getSheetById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sheet'
    put:
      tags:
      - sheet-controller
      operationId: updateSheet
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSheetDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sheet'
    delete:
      tags:
      - sheet-controller
      operationId: deleteSheet
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /exercise/{id}:
    get:
      tags:
      - exercise-controller
      operationId: getExerciseById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'
    put:
      tags:
      - exercise-controller
      operationId: updatExercise
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExerciseDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'
    delete:
      tags:
      - exercise-controller
      operationId: deleteExercise
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /sheet:
    get:
      tags:
      - sheet-controller
      operationId: getAllSheets
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sheet'
    post:
      tags:
      - sheet-controller
      operationId: createSheet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSheetDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sheet'
  /image:
    get:
      tags:
      - test-controller
      operationId: getImage
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - test-controller
      operationId: saveImage
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /exercise:
    get:
      tags:
      - exercise-controller
      operationId: getAllExercises
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Exercise'
    post:
      tags:
      - exercise-controller
      operationId: createExercise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExerciseDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'
  /courses:
    get:
      tags:
      - course-controller
      operationId: getAllCourses
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
    post:
      tags:
      - course-controller
      operationId: createCourse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourseDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
  /categories:
    get:
      tags:
      - category-controller
      operationId: getAllCategories
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      tags:
      - category-controller
      operationId: createCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /sheet/{id}/pdf:
    get:
      tags:
      - sheet-controller
      operationId: getSheetPdf
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/pdf:
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /courses/{id}:
    get:
      tags:
      - course-controller
      operationId: getCourseById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
    delete:
      tags:
      - course-controller
      operationId: deleteCaourse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /categories/{id}:
    get:
      tags:
      - category-controller
      operationId: getCategoryById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    delete:
      tags:
      - category-controller
      operationId: deleteCategory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
components:
  schemas:
    CreateCategoryDto:
      required:
      - name
      type: object
      properties:
        name:
          type: string
    CreateCourseDto:
      required:
      - name
      type: object
      properties:
        name:
          type: string
    CreateSheetDto:
      required:
      - categories
      - courses
      - exercises
      - title
      type: object
      properties:
        title:
          type: string
        exercises:
          type: array
          items:
            type: string
        courses:
          type: array
          items:
            $ref: '#/components/schemas/CreateCourseDto'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CreateCategoryDto'
    Author:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Course:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Exercise:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        author:
          $ref: '#/components/schemas/Author'
        title:
          type: string
        shortDescription:
          type: string
        note:
          type: string
        texts:
          type: array
          items:
            type: string
        solutions:
          type: array
          items:
            type: string
        images:
          type: array
          items:
            type: string
        courses:
          type: array
          items:
            $ref: '#/components/schemas/Course'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    Sheet:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        publishedAt:
          type: string
          format: date-time
        title:
          type: string
        author:
          $ref: '#/components/schemas/Author'
        courses:
          type: array
          items:
            $ref: '#/components/schemas/Course'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/Exercise'
    CreateExerciseDto:
      required:
      - categories
      - courses
      - solutions
      - texts
      - title
      type: object
      properties:
        title:
          type: string
        note:
          type: string
        shortDescription:
          type: string
        texts:
          type: array
          items:
            type: string
        solutions:
          type: array
          items:
            type: string
        images:
          type: array
          items:
            type: string
        courses:
          type: array
          items:
            $ref: '#/components/schemas/CreateCourseDto'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CreateCategoryDto'
